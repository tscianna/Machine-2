# -*- coding: utf-8 -*-
"""Scianna HW-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/144-QazJQKLr6Rp2dzmM76rYSw36m4TqL

# Homework 1

## References

+ Lectures 1-3 (inclusive).

## Instructions

+ Type your name and email in the "Student details" section below.
+ Develop the code and generate the figures you need to solve the problems using this notebook.
+ For the answers that require a mathematical proof or derivation you should type them using latex. If you have never written latex before and you find it exceedingly difficult, we will likely accept handwritten solutions.
+ The total homework points are 100. Please note that the problems are not weighed equally.
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
sns.set(rc={"figure.dpi":100, "savefig.dpi":300})
sns.set_context("notebook")
sns.set_style("ticks")

"""## Student details

+ **First Name:Trevor 
+ **Last Name:Scianna
+ **Email: tsciann@purdue.edu

Disclaimer: This example is a modified version of the one found in a 2013 lecture on Bayesian Scientific Computing taught by Prof. Nicholas Zabaras.
I am not sure where the original problem is coming from.

We are tasked with assessing the usefulness of a tuberculosis test.
The prior information I is:

> The percentage of the population infected by tuberculosis is 0.4\%.
We have run several experiments and determined that:
+ If a tested patient has the disease, then 80\% of the time the test comes out positive.
+ If a tested patient does not have the disease, then 90\% of the time the test comes out negative.

To facilitate your analysis, consider the following logical sentences concerning a patient:

> A: The patient is tested and the test is positive.

> B: The patient has tuberculosis.

A. Find the probability that the patient has tuberculosis (before looking at the result of the test), i.e., $p(B|I)$. This is known as the base rate or the prior probability.<br>
**Answer:**
The base rate for the population having TB is:
$p(B|I)$ = 0.004 or 0.4%

B. Find the probability that the test is positive given that the patient has tuberculosis, i.e., $p(A|B,I)$.<br>
**Answer:**
The Probability that the test is positive $GIVEN$ the patient has TB:
$p(A|B,I)$ = (0.80) or 80%

C. Find the probability that the test is positive given that the patient does not have tuberculosis, i.e., $p(A|\neg B, I)$.<br>
**Answer:**
The probability that the test is positive $GIVEN$ the patient DOES NOT have TB:
$p(A|¬B,I)$ = 0.1 or 10%

D. Find the probability that a patient that tested positive has tuberculosis, i.e., $p(B|A,I)$.<br>
**Answer:**    
$p(B|A,I)$ = $p(B)p(A|B)$ /   
[$p(B)p(A|B)$ + $p(¬B)p(A|¬B)$]

$p(B)$ = 0.004  
$p(A|B)$ = 0.8  
$p(¬B)$ = 0.996  
$p(A|¬B)$ = 0.1  

$p(B|A,I)$ = (0.004)(0.8) / ((0.004)(0.8) + (0.996)(0.1))  

$p(B|A,I)$ = 0.0311 or 3.11%

E. Find the probability that a patient that tested negative has tuberculosis, i.e., $p(B|\neg A, I)$. Does the test change our prior state of knowledge about about the patient? Is the test useful?<br>
**Answer:**  
$p(B|¬A,I)$  =  $p(B)p(¬A|B)$  /
[ $p(B)p(¬A|B)$  +  $p(¬B)p(¬A|¬B)$ ]  
$p(¬A|B)$  = 0.2  
$(p(¬A|¬B)$ = 0.9

$p(B|¬A,I)$  = (0.004)(0.2) / ((0.004)(0.2) + (0.996)(0.9))  

$p(B|¬A,I)$ = 0.0008916 or 0.089%

If less than 1% of people that test negative actually have TB then the test is most useful and accurate in predicting not having TB; howver, this particular test is awful at determining if a person is postive for TB given that only 3.11% the person testing positve actually has TB. Overall, this test is useful for determining someone does not have TB which can be useful.

F. What would a good test look like? Find values for 

$$
p(A|B,I)= p(\text{test is positive} |\text{has tuberculosis},I),
$$

and

$$
p(A| \neg B, I) = p(\text{test is positive}|\text{does not have tuberculosis}, I),
$$

so that

$$
p(B|A, I) = p(\text{has tuberculosis}|\text{test is positive}, I) = 0.99.
$$

There are more than one solutions. How would you pick a good one? Thinking in this way can help you set goals if you work in R\&D. If you have time, try to figure out whether or not there exists such an accurate test for tuberculosis<br>
**Answer:**  
Scenario ...   
$p(B|A,I)$  =  $p(B)p(A|B)$  /
[ $p(B)p(A|B)$  +  $p(¬B)p(A|¬B)$ ] = 0.99  
0.99 = (0.004)(X) / ((0.004)(X) + (0.996)(Y))  

If X = 1 and Y = 0.00001 then $p(B|A,I)$ = 0.99   
This solution would mean that the test was perfectly accurate in determining the person had TB and didnt give more than 1 in 10,000 false positves. This test would be most useful and accurate.

## Problem 2 - Practice with discrete random variables

Consider the Categorical random variable:

$$
X \sim \operatorname{Categorical}(0.3, 0.1, 0.2, 0.4),
$$

taking values in $\{0,1,2,3\}$. Find the following (you may use ``scipy.stats.rv_discrete`` or do it by hand):
"""

# Define the probabilities:
ps = [0.3, 0.1, 0.2, 0.4] 
# And here are the corresponding values
xs = np.array([0, 1, 2, 3])
X = st.rv_discrete(name="Custom Categorical", values=(xs, ps))
x_samples = X.rvs(size=10)
print(f"samples: {x_samples}")

"""A. The expectation $\mathbb{E}[X]$.

**Answer:**  
E[X] = (0)*(0.3) + (1)*(0.1) + (2)*(0.2) + (3)*(0.4);  
E[X] = 0 + 0.1 + 0.4 + 1.2;  
E[X] = 1.7;

B. The variance $\mathbb{V}[X]$.

**Answer:**  
V[X] = E[X^2] - (E[X])^2;   
E[X^2] = (0^2)*(0.3) + (1^2)*(0.1) + (2^2)*(0.2) + (3^2)*(0.4) = 4.5   
(E[X])^2 = (1.7)^2 = 2.89;   
V[X] = 4.5 - 2.89 = 1.61

C. Plot the probability mass function of $X$.
"""

fig, ax = plt.subplots()
ax.bar(xs, X.pmf(xs))
ax.set_xlabel("$x$")
ax.set_ylabel("$p(x)$");

"""D. Find the probability that $X$ is in $\{0, 2\}$.

**Answer:**  
Assuming  $p(X∈{0,2}) = p(X=0 or X=2)$   
$p(X=2)$ = 0.20   
$p(X=2)$ = 0.30   
$p(X=2)$ + $p(X=0)$ = 0.20 + 0.30 =0.50; 
Probability = 50%
"""

print(f"p(X=2) = {X.pmf(2):.2f}")
print(f"p(X=0) = {X.pmf(0):.2f}")

"""E. Find $\mathbb{E}[4X + 3]$.

**Answer:**  
E[X] = 1.7   
E[X] = (4*1.7) + 3  
E[X] = 9.8

F. Find $\mathbb{V}[4X+3]$.

**Answer:**  
V[X] = (4^2)*(1.61)   
V[X] = 25.76

## Problem 3 - Predicting the probability of major earthquakes in Southern California

The [San Andreas fault](https://en.wikipedia.org/wiki/San_Andreas_Fault) extends through California forming the boundary between the Pacific and the North American tectonic plates.
It has caused some of the major earthquakes on Earth.
We are going to focus on Southern California and we would like to assess the probability of a major earthquake, defined as an earthquake of magnitude 6.5 or greater, during the next ten years.

A. The first thing we are going to do is go over a [database of past earthquakes](https://scedc.caltech.edu/significant/chron-index.html) that have occured in Southern California and collect the relevant data. We are going to start at 1900 because data before that time may are unreliable.
Go over each decade and count the occurence of a major earthquake (i.e., count the number of organge and red colors in each decade). We have done this for you.
"""

eq_data = np.array([
    0, # 1900-1909
    1, # 1910-1919
    2, # 1920-1929
    0, # 1930-1939
    3, # 1940-1949
    2, # 1950-1959
    1, # 1960-1969
    2, # 1970-1979
    1, # 1980-1989
    4, # 1990-1999
    0, # 2000-2009
    2 # 2010-2019 
])
fig, ax = plt.subplots(dpi=150)
ax.bar(np.linspace(1900, 2019, eq_data.shape[0]), eq_data, width=10)
ax.set_xlabel('Decade')
ax.set_ylabel('# of major earthquakes in Southern CA');

"""B. The [Poisson distribution](https://en.wikipedia.org/wiki/Poisson_distribution) is a discrete distribution with values $\{0,1,2,\dots\}$ which is commonly used to model the number of events occuring in a certain time period.
It is the right choice when these events are happening independently and the probability of any event happening over a small period of time is constant.
Let's use the Poisson to model the number of earthquakes $X$ occuring in a decade.
We write:

$$
X \sim \operatorname{Poisson}(r),
$$

where $r$ is the *rate parameter* of Poisson.
The rate is the number of events per time period.
Here, $r$ is the number of earthquakes per decade.
Using the data above, we can set the rate as the empirical average of the observed number of earthquakes per decade:
"""

r = np.mean(eq_data)
print('r = {0:1.2f} major earthquakes per decade'.format(r))

import scipy.stats as st
r=1.50
X = st.poisson(r)

"""Strictly speaking, **this is not how you should be calibrating models!!!**
We will learn about the **right** way (which uses Bayes' rule) in the subsequent lectures.
But it will do for now as the answer you would get using the **right** way is, for this problem, almost the same.
Let's define a Poisson distribution using ``scipy.stats.poisson`` (see documentation [here](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.poisson.html)):

A. Plot the probability mass function of ``X``.
"""

ks = range(7)
fig, ax = plt.subplots()
ax.bar(ks, X.pmf(ks))
ax.set_xlabel('Number of major earthquakes in next decade')
ax.set_ylabel('Probability of occurance');

"""B. What is the probability that at least one major earthquake will occur during the next decade?<br>
**Answer:**  
p(X∈1,2,3,4,5) =   
p(X=1 or X=2 or X=3 or X=4 or X=5)  
$p(X=1)$ = 0.33   
$p(X=2)$ = 0.25  
$p(X=3)$ = 0.13  
$p(X=4)$ = 0.05       
$p(X=5)$ = 0.01

Sum all 5 probabilities = 0.77;   
         Probability = 77%


"""

print(f"p(X=0) = {X.pmf(0):.2f}")
print(f"p(X=1) = {X.pmf(1):.2f}")
print(f"p(X=2) = {X.pmf(2):.2f}")
print(f"p(X=3) = {X.pmf(3):.2f}")
print(f"p(X=4) = {X.pmf(4):.2f}")
print(f"p(X=5) = {X.pmf(5):.2f}")

"""C. What is the probability that at least one major earthquake will occur during the next two decades?
Hint: Consider two independent and identical copies of $X$, say $X_1$ and $X_2$.
And consider their sum $Y = X_1 + X_2$. Read [this](https://en.wikipedia.org/wiki/Poisson_distribution#Sums_of_Poisson-distributed_random_variables) about the sum of two independent Poisson distributions.
<br>
**Answer:**  
Summation of all probabilities X=1, X=2, ... X=6
Probability = 95%  
More specifically: $p(0)$=0.22  
1-(0.22)^2 = 0.9516 or 95.16%
"""

import scipy.stats as st
r=3
X = st.poisson(r)
ks = range(7)
fig, ax = plt.subplots()
ax.bar(ks, X.pmf(ks))
ax.set_xlabel('Number of major earthquakes in next two decades')
ax.set_ylabel('Probability of occurance');

"""D. What is the probability that at least one major earthquake will occur during the next five decades?<br>
**Answer:**  
Summation of all probabilities X=1, X=2, ... etc X=inf  
More specifically: $p(0)$=0.22    
1-(0.22)^5 = 0.9914 or 99.14%
"""

import scipy.stats as st
r=7.5
X = st.poisson(r)
ks = range(17)
fig, ax = plt.subplots()
ax.bar(ks, X.pmf(ks))
ax.set_xlabel('Number of major earthquakes in next five decades')
ax.set_ylabel('Probability of occurance');
print(f"p(X=1) = {X.pmf(1):.2f}")
print(f"p(X=2) = {X.pmf(2):.2f}")
print(f"p(X=3) = {X.pmf(3):.2f}")
print(f"p(X=4) = {X.pmf(4):.2f}")
print(f"p(X=5) = {X.pmf(5):.2f}")